<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <import resource="db-services.xml"/>
    <import resource="db-usage-services.xml"/>

    <bean id="configuration" class="org.openstack.atlas.api.config.RestApiConfiguration"/>

    <!--JMS SETTINGS-->
    <bean id="jmsActiveMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq_broker_uri}"/>
    </bean>

    <bean id="jmsPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="maxConnections" value="${jms.pool.max.connections}"/>
        <property name="maximumActive" value="${jms.pool.max.active.connections}"/>
        <property name="connectionFactory" ref="jmsActiveMQConnectionFactory"/>
    </bean>
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" scope="singleton">
        <property name="receiveTimeout" value="${jms.template.receive.timeout}"/>
        <property name="sessionTransacted" value="true"/>
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
    </bean>

    <bean id="baseListener" class="org.openstack.atlas.api.async.BaseListener" abstract="true">
        <property name="jmsTemplate" ref="jmsTemplate"/>
        <property name="loadBalancerService" ref="loadBalancerService"/>
        <property name="virtualIpService" ref="virtualIpService"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="notificationService" ref="notificationService"/>
        <property name="healthMonitorService" ref="healthMonitorService"/>
        <property name="connectionThrottleService" ref="connectionThrottleService"/>
        <property name="connectionLoggingService" ref="connectionLoggingService"/>
        <property name="sessionPersistenceService" ref="sessionPersistenceService"/>
        <property name="reverseProxyLoadBalancerService" ref="reverseProxyLoadBalancerService"/>
        <property name="accessListService" ref="accessListService"/>
        <property name="rateLimitingService" ref="rateLimitingService"/>
        <property name="hostService" ref="hostService"/>
    </bean>

    <bean id="reverseProxyLoadBalancerAdapter" class="org.openstack.atlas.adapter.Null.NullAdapterImpl"/>

    <bean id="reverseProxyLoadBalancerService"
          class="org.openstack.atlas.api.integration.ReverseProxyLoadBalancerServiceImpl">
        <property name="notificationService" ref="notificationService"/>
        <property name="loadBalancerService" ref="loadBalancerService"/>
        <property name="healthMonitorService" ref="healthMonitorService"/>
        <property name="hostService" ref="hostService"/>
        <property name="reverseProxyLoadBalancerAdapter" ref="reverseProxyLoadBalancerAdapter"/>
        <property name="configuration" ref="configuration"/>
    </bean>

    <bean id="deleteLoadBalancerListener"
          class="org.openstack.atlas.api.async.DeleteLoadBalancerListener"
          parent="baseListener"/>

    <bean id="deleteLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteLoadBalancerListener"/>
        <property name="destinationName" value="DELETE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="batchDeleteLoadBalancerListener"
          class="org.openstack.atlas.api.async.BatchDeleteLoadBalancerListener"
          parent="baseListener"/>

    <bean id="batchDeleteLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="batchDeleteLoadBalancerListener"/>
        <property name="destinationName" value="BATCH_DELETE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteAccessListListener"
          class="org.openstack.atlas.api.async.DeleteAccessListListener"
          parent="baseListener"/>

    <bean id="deleteAccessListListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteAccessListListener"/>
        <property name="destinationName" value="DELETE_ACCESS_LIST"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>


    <bean id="updateLoadBalancerListener"
          class="org.openstack.atlas.api.async.UpdateLoadBalancerListener"
          parent="baseListener"/>

    <bean id="updateLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateLoadBalancerListener"/>
        <property name="destinationName" value="UPDATE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="createLoadBalancerListener"
          class="org.openstack.atlas.api.async.CreateLoadBalancerListener"
          parent="baseListener"/>

    <bean id="createLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="createLoadBalancerListener"/>
        <property name="destinationName" value="CREATE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="createNodesListener"
          class="org.openstack.atlas.api.async.CreateNodesListener"
          parent="baseListener"/>

    <bean id="createNodesListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="createNodesListener"/>
        <property name="destinationName" value="CREATE_NODES"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="updateNodeListener"
          class="org.openstack.atlas.api.async.UpdateNodeListener"
          parent="baseListener"/>

    <bean id="updateNodeListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateNodeListener"/>
        <property name="destinationName" value="UPDATE_NODE"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="addVirtualIpListener"
          class="org.openstack.atlas.api.async.AddVirtualIpListener"
          parent="baseListener"/>

    <bean id="addVirtualIpListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="addVirtualIpListener"/>
        <property name="destinationName" value="ADD_VIRTUAL_IP"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteVirtualIpsListener"
          class="org.openstack.atlas.api.async.DeleteVirtualIpsListener"
          parent="baseListener"/>

    <bean id="deleteVirtualIpsListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteVirtualIpsListener"/>
        <property name="destinationName" value="DELETE_VIRTUAL_IPS"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteNodeListener"
          class="org.openstack.atlas.api.async.DeleteNodeListener"
          parent="baseListener"/>

    <bean id="deleteNodeListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteNodeListener"/>
        <property name="destinationName" value="DELETE_NODE"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteNodesListener"
          class="org.openstack.atlas.api.async.DeleteNodesListener"
          parent="baseListener"/>

    <bean id="deleteNodesListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteNodesListener"/>
        <property name="destinationName" value="DELETE_NODES"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>


    <bean id="updateAccessListListener"
          class="org.openstack.atlas.api.async.UpdateAccessListListener"
          parent="baseListener"/>

    <bean id="updateAccessListListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateAccessListListener"/>
        <property name="destinationName" value="APPEND_TO_ACCESS_LIST"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="updateHealthMonitorListener"
          class="org.openstack.atlas.api.async.UpdateHealthMonitorListener"
          parent="baseListener"/>

    <bean id="updateHealthMonitorContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateHealthMonitorListener"/>
        <property name="destinationName" value="UPDATE_HEALTH_MONITOR"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteHealthMonitorListener"
          class="org.openstack.atlas.api.async.DeleteHealthMonitorListener"
          parent="baseListener"/>

    <bean id="deleteHealthMonitorContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteHealthMonitorListener"/>
        <property name="destinationName" value="DELETE_HEALTH_MONITOR"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="updateConnectionThrottleListener"
          class="org.openstack.atlas.api.async.UpdateConnectionThrottleListener"
          parent="baseListener"/>

    <bean id="updateConnectionThrottleContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateConnectionThrottleListener"/>
        <property name="destinationName" value="UPDATE_CONNECTION_THROTTLE"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteConnectionThrottleListener"
          class="org.openstack.atlas.api.async.DeleteConnectionThrottleListener"
          parent="baseListener"/>

    <bean id="deleteConnectionThrottleContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteConnectionThrottleListener"/>
        <property name="destinationName" value="DELETE_CONNECTION_THROTTLE"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="updateConnectionLoggingListener"
          class="org.openstack.atlas.api.async.UpdateConnectionLoggingListener"
          parent="baseListener"/>

    <bean id="updateConnectionLoggingContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateConnectionLoggingListener"/>
        <property name="destinationName" value="UPDATE_CONNECTION_LOGGING"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="deleteSessionPersistenceListener"
          class="org.openstack.atlas.api.async.DeleteSessionPersistenceListener"
          parent="baseListener"/>

    <bean id="deleteSessionPersistenceContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="deleteSessionPersistenceListener"/>
        <property name="destinationName" value="DISABLE_SESSION_PERSISTENCE"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="updateSessionPersistenceListener"
          class="org.openstack.atlas.api.async.UpdateSessionPersistenceListener"
          parent="baseListener"/>

    <bean id="updateSessionPersistenceContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateSessionPersistenceListener"/>
        <property name="destinationName" value="ENABLE_SESSION_PERSISTENCE"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="usageEventListener"
          class="org.openstack.atlas.api.async.UsageEventListener">
        <property name="usageRepository" ref="usageRepository"/>
        <property name="usageEventRepository" ref="usageEventRepository"/>
        <property name="loadBalancerRepository" ref="loadBalancerRepository"/>
        <property name="accountUsageRepository" ref="accountUsageRepository"/>
        <property name="virtualIpRepository" ref="virtualIpRepository"/>
    </bean>

    <bean id="usageEventContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="usageEventListener"/>
        <property name="destinationName" value="USAGE_EVENT"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>
</beans>
